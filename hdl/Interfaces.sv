interface Simple_Mem_IF ();
    // ------ Write ------
    // wr_addr
    // wr_data
    // wr_ready -- generated by worker as acknowledgement of a write
    // wr_valid -- generated by manager when wr_data and wr_addr are asserted
    // ------ Read ------
    // rd_addr
    // rd_data
    // rd_ready -- generated by worker when rd_data is asserted
    // rd_valid -- generated by manager when rd_addr is asserted


    logic           clock;
    logic           reset_n;

    logic [31:0]    wr_addr;
    logic [31:0]    wr_data;
    logic           wr_ready;
    logic           wr_valid;

    logic [31:0]    rd_addr;
    logic [31:0]    rd_data;
    logic           rd_valid;
    logic           rd_ready;

    modport COWI (
        input clock, reset_n,

        input wr_addr,
        input wr_data,
        input wr_valid,
        output wr_ready,

        input rd_addr,
        input rd_valid,
        output rd_data,
        output rd_ready
    );

	modport COMI (
		input clock, reset_n,

        output wr_addr,
        output wr_data,
        output wr_valid,
        input wr_ready,

        output rd_addr,
        output rd_valid,
        input rd_data,
        input rd_ready
	);

    modport CIWO (
        output clock, reset_n,

        output wr_addr,
        output wr_data,
        output wr_valid,
        input wr_ready,

        output rd_addr,
        output rd_valid,
        input rd_data,
        input rd_ready
	);

    modport CIMO (
        output clock, reset_n,

        input wr_addr,
        input wr_data,
        input wr_valid,
        output wr_ready,

        input rd_addr,
        input rd_valid,
        output rd_data,
        output rd_ready
	);

endinterface
